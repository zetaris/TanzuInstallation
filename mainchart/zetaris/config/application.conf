fileSavingPath {
  # This path is the location to for user files and histories
  # You can use absolute path such like "/path/to/data"
  # Or relative path like "path/to/data", relative to the application path
  path = "/home/zetaris/customer-data"
}

jdbc {
  # This is the configuration for jdbc driver name and url
  driverName = ${JDBC_DRIVER}
  url = ${JDBC_URL}
  # jdbc:zetaris:lightning@ip(host):port

  username = ${NDP_DRIVER_USERNAME}
  password = ${NDP_DRIVER_PASSWORD}

  extraProperties {
    # ssl = "test"
  }



  #This is the JDBC connection cache expiration, in *MINUTES*
  cacheExpiration = 5 #minutes

  #This field spicifies the max rows allowed in query result size
  maxResultsetSize = 200

  pool {
    SAAS_MAIN {
      min = 20
      max = 50
    }
    SAAS_SQL_WORKBENCH {
      min = 5
      max = 10
    }
    SAAS_STREAMING {
      min = 5
      max = 10
    }
    STANDALONE {
      min = 2
      max = 50
    }
    SAAS_ADMIN {
      min = 5
      max = 10
    }
  }
}

maxFileAllowed {
  # This property specifies how many files each user can save
  amount = 100
}

session {
  # This property specifies the expiration for each user session in *MINUTES*
  expiration = 60 #minutes
}

play.server.http.idleTimeout = infinite

# Server settings
# The secret key is used to sign session cookie.
# This must be changed for production, but we don't recommend you change it in this file.
play.http.secret.key = "changeme"

play.i18n {
  langs = ["en-AU"]
}

play.filters.disabled += play.filters.csrf.CSRFFilter
play.filters.headers {

  # The X-Frame-Options header. If null, the header is not set.
  frameOptions = "DENY"

  # The X-XSS-Protection header. If null, the header is not set.
  xssProtection = "1; mode=block"

  # The X-Content-Type-Options header. If null, the header is not set.
  contentTypeOptions = null

  # The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
  permittedCrossDomainPolicies = "master-only"

  # The Content-Security-Policy header. If null, the header is not set.
  #contentSecurityPolicy = "default-src 'self'"
  contentSecurityPolicy = null

  # The Referrer-Policy header. If null, the header is not set.
  referrerPolicy = "origin-when-cross-origin, strict-origin-when-cross-origin"
  #referrerPolicy = "origin-when-cross-origin, strict-origin-when-cross-origin"

  # If true, allow an action to use .withHeaders to replace one or more of the above headers
  allowActionSpecificHeaders = true
}

play.filters.hosts {
  allowed = ["."]
}

play.http.session.sameSite = null

## HTTP settings
# ~~~~~
play.http {
  parser.maxMemoryBuffer=100MB
  parser.maxDiskBuffer = 100MB
  errorHandler = com.zetaris.lightning.gui.service.ErrorHandler
  session {
    # Sets the cookie to be sent only over HTTPS.
    # secure = true

    # Sets the cookie to be accessed only by the server.
    httpOnly = true

    # Sets the max-age field of the cookie to 5 minutes.
    # NOTE: this only sets when the browser will discard the cookie. Play will consider any
    # cookie value with a valid signature to be a valid session forever. To implement a server side session timeout,
    # you need to put a timestamp in the session and check it at regular intervals to possibly expire it.
    #maxAge = 3600
  }

  flash {
    # Sets the cookie to be sent only over HTTPS.
    # secure = true

    # Sets the cookie to be accessed only by the server.
    httpOnly = true
  }
}

parsers.anyContent.maxLength=100MB

pidfile.path = "/dev/null"

dataQuality {
  dataSource = "FUSIONDB"
  tableSchema = "public__"
  exceptionDataTable = "excptn"
  exceptionTypeTable = "excptn_tp"
  batchProcessStatsTable = "btch_prcss_stts"
}

#Running Mode(STANDALONE | SAAS_MAIN | SAAS_SQL_WORKBENCH | SAAS_ADMIN | SAAS_STREAMING)
guiType = "STANDALONE"
# guiType = "SAAS_MAIN"
# guiType = "SAAS_SQL_WORKBENCH"
# guiType = "SAAS_ADMIN"
# guiType = "SAAS_STREAMING"

# SAAS-ADMIN-ACL = []

organisationId = "123456777"
dataWarehouseName = "Default_name"

play.modules.enabled += "com.zetaris.lightning.gui.module.LightningModule"
play.modules.enabled += "com.zetaris.lightning.gui.module.SecurityModule"
play.filters.enabled += "play.filters.headers.SecurityHeadersFilter"

query.timeouts { // milliseconds
  SAAS_MAIN = 0
  SAAS_ADMIN = 0
  SAAS_SQL_WORKBENCH = 0
  SAAS_STREAMING = 0
  STANDALONE = 0
  DEFAULT = 0
}

//query.keywords = ["SELECT", "SHOW"]
query.keywords = ["SELECT"]

azureLogAnalytics {
  client_id       = ${?CLIENT_ID}
  redirect_uri    = "http://localhost:3000"
  client_secret   = ${?CLIENT_SECRET}
  workspaceId     = ${?WORKSPACE_ID}
  subscription_id = ${?SUBSCRIPTION_ID}
  tenant_id       = ${?TENANT_ID}
}

filesystem_staging = "data"
filesystem_staging = ${?ZFILESYSTEM_STAGING}

saas {
  executors_S = 2
  executors_M = 4
  executors_L = 6
  executor_cores = 6
  executor_memory = 24g
}

isPolicyEnabled = true

showDataQuality = false

showMessage = true
showStacktrace = true
exception {
  hideOnPatterns = []
}

logging {
  hideOnPatterns = ["clientSecret\\s\\\\*\\\"[\\w | \\W]+\\\",\\s"]
}
isTrial = false

sso {
  redirectUrl = ${?SSO_REDIRECT_URL} // This should be the UI URL in prod
  saml2 {
    keyStore {
      certificateFilePath = ""
      privateKeyFilePath = ""
    }
  }
}

# BRANDING: defaults to name: Zetaris, logoPath: public/images/zetaris_logo_blue.svg
org {
    name = ""
    logoPath = ""
}

//
// This should be an internal api port, if it is api is depoyed in the same machine
// default config should just work, if it is deployment in a cluster, it should be routed internally via a host name
//
internalRestServiceUrl = "http://localhost:8888"
internalRestServiceUrl = ${?INTERNAL_REST_SERVICE_URL}
//
// This is used for ui/browser, it should be a public url using public hostname
//
restServiceUrl = "http://localhost:8888"
restServiceUrl = ${?REST_SERVICE_URL}

calendlyUrl = ""
calendlyUrl = ${?CALENDLY_URL}

apacheAirflowUrl = ""
apacheAirflowUrl = ${?APACHE_AIRFLOW_URL}

showBuildHash = false
showBuildHash = ${?SHOW_BUILD_HASH}

#hubspot tracking
enableHubspotTracking = false
enableHubspotTracking = ${?ENABLE_HUBSPOT_TRACKING}
